{"version":3,"sources":["components/Grid/Grid.js","store/actionTypes.js","axios.js","store/actions.js","components/SearchPanel/SearchPanel.js","components/UI/Loader/Loader.js","components/SearchResult/Result/Result.js","components/SearchResult/SearchResult.js","App.js","store/reducer.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","maxHeight","outterGrid","padding","margin","width","paper","minHeight","overflowY","rightGrid","backgroundColor","FullWidthGrid","props","classes","className","Grid","container","spacing","item","xs","md","Paper","left","right","SEARCH_FOR_ALBUMS","ALBUMS_ERR","GET_SONGS_FROM_ALBUM","SONG_ERR","RESET_SONGS","instance","axios","create","baseURL","fetchAlbums","filterType","searchValue","dispatch","route","get","then","res","albumsToDisplay","filterValue","albums","regex","RegExp","filter","el","match","filterAlbumsBy","data","results","length","message","reportAlbumsFetchError","getAlbumsResults","catch","err","console","log","type","actionTypes","reportSongsFetchError","getSongsFromAlbum","songs","shift","purple","inputLine","center","display","justifyContent","title","textAlign","PurpleCheckbox","withStyles","color","checked","Checkbox","PurpleButton","palette","getContrastText","marginTop","Button","SearchPanel","useDispatch","useState","artist","album","any","label","checks","setChecks","setSearchValue","Typography","variant","FormControlLabel","control","onChange","event","name","TextField","id","value","target","onClick","actions","Loader","data-testid","white","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","text","secondary","detailsContainer","details","flex","Result","useSelector","state","songErr","songsToShow","map","song","trackName","trackId","result","relDate","Date","releaseDate","dateToDisplay","getDate","getMonth","getFullYear","songsToDisplay","Accordion","expanded","collectionId","handleChange","AccordionSummary","expandIcon","aria-controls","artistName","collectionName","AccordionDetails","trackCount","country","collectionPrice","currency","waitingPanel","SearchResult","React","setExpanded","resErr","panel","isExpanded","albumId","isClosing","resultsToShow","waitingScreen","App","sl","sr","initialState","updateObject","oldObject","updatedProperties","reducer","action","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72271fbd.chunk.js","sourcesContent":["import React from 'react';\nimport {Grid, Paper, makeStyles}from '@material-ui/core';\nimport './Grid.css';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    maxHeight:\"85vh\",\n  },\n  outterGrid: {\n    padding: \"0 10px\",\n    margin: \"10px 0\",\n    width: \"100%\",\n    maxHeight: \"85vh\",\n  },\n  paper: {\n    padding: \"15px\",\n    margin: \"10px\",\n    maxHeight: \"80vh\",\n    minHeight: \"240px\",\n    overflowY: \"auto\",\n  },\n  rightGrid: {\n    backgroundColor: \"#551281\"\n  }\n}));\n\nexport default function FullWidthGrid(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n        <Grid container spacing={1} className={classes.outterGrid}>\n            <Grid item xs={12} md={5}>\n              <Paper className={classes.paper}>\n                {props.left}\n              </Paper>\n            </Grid>\n            <Grid item xs={12} md={7} >\n              <Paper className={classes.paper+ ' ' + classes.rightGrid + ' HideScroll '}>\n                {props.right}\n              </Paper>\n            </Grid>\n      </Grid>\n    </div>\n  );\n}","export const SEARCH_FOR_ALBUMS = \"SEARCH_FOR_ALBUMS\";\nexport const ALBUMS_ERR = \"ALBUMS_ERR\";\nexport const GET_SONGS_FROM_ALBUM = \"GET_SONGS_FROM_ALBUM\";\nexport const SONG_ERR = \"SONG_ERR\";\nexport const RESET_SONGS = \"RESET_SONGS\";\nexport const START_LOADING = \"START_LOADING\";","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://itunes.apple.com/',\n});\n\nexport default instance;","import * as actionTypes from './actionTypes';\nimport axios from '../axios';\n\nconst filterAlbumsBy = (filterType, filterValue, albums) => {\n    const regex = new RegExp(filterValue, \"i\");\n    let albumsToDisplay = albums.filter( el => el[filterType].match(regex));\n\n    return albumsToDisplay;\n}\n\nexport const fetchAlbums = (filterType, searchValue) => {\n    return dispatch => {\n        let route = 'search?term=' + searchValue + '&entity=album';\n        axios.get(route)\n        .then(res => {\n            let albumsToDisplay;\n            if(filterType !== \"any\"){\n                albumsToDisplay = filterAlbumsBy(filterType, searchValue, res.data.results);\n            }else{\n                albumsToDisplay = res.data.results;\n            }\n\n            if(albumsToDisplay.length === 0){\n                let message = `No albums connected to the term ${searchValue} were found. Please try again with different parameter.`\n                dispatch(reportAlbumsFetchError(message));\n            }else{\n                dispatch(getAlbumsResults(albumsToDisplay));\n            }\n        })\n        .catch(err => {\n            console.log(err.message);\n            let message = `A probblem has occured while connecting to the database, please try again later`;\n            dispatch(reportAlbumsFetchError(message));\n        })\n    }\n}\n\nexport const reportAlbumsFetchError = (err) => {\n    return{\n        type: actionTypes.ALBUMS_ERR,\n        err: err\n    }\n}\n\nexport const getAlbumsResults = (results) => {\n    return{\n        type: actionTypes.SEARCH_FOR_ALBUMS,\n        results: results\n    }\n}\n\nexport const fetchSongsFromAlbum = (albumId) => {\n    return dispatch => {\n        let route = 'lookup?id=' + albumId + '&entity=song';\n        axios.get(route)\n        .then(res => {\n            dispatch(getSongsFromAlbum(res.data.results));\n        })\n        .catch(err => {\n            console.log(err.message);\n            let message = `A probblem has occured while connecting to the database, please try again later`;\n            dispatch(reportSongsFetchError(message))\n        })\n    }\n}\n\nexport const reportSongsFetchError = (err) => {\n    return{\n        type: actionTypes.SONG_ERR,\n        err: err\n    }\n}\n\nexport const getSongsFromAlbum = (songs) => {\n    songs.shift();\n    return{\n        type: actionTypes.GET_SONGS_FROM_ALBUM,\n        songs: songs\n    }\n}\n\nexport const resetSongs = () => {\n    return{\n        type: actionTypes.RESET_SONGS\n    }\n}","import React, { Fragment, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as actions from './../../store/actions';\nimport { TextField, Typography, Button, withStyles, makeStyles, FormControlLabel, Checkbox} from '@material-ui/core';\n\nconst purple = \"#551281\";\n\nconst useStyles = makeStyles((theme) => ({\n    inputLine: {\n        width: \"100%\",\n        margin: \"15px 0\"\n    },\n    center: {\n        display: \"flex\",\n        justifyContent: \"space-around\"\n    },\n    title: {\n        textAlign: 'center'\n    }\n}));\n\nconst PurpleCheckbox = withStyles({\n    root: {\n      color: purple,\n      '&$checked': {\n        color: purple,\n      },\n    },\n    checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nconst   PurpleButton = withStyles((theme) => ({\n    root: {\n      color: theme.palette.getContrastText(purple),\n      backgroundColor: purple,\n      '&:hover': {\n        backgroundColor: purple,\n      },\n      marginTop: \"10px\"\n    },\n  }))(Button);\n\n\nconst SearchPanel = (props) => {\n\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const [checks, setChecks] = useState({\n        artist: true,\n        album: false,\n        any: false,\n        label: \"artist\"\n    });\n\n    const [searchValue, setSearchValue] = useState(\"\");\n\n    const handleSearchValueChange = (event) => {\n        setSearchValue(event.target.value);\n    }\n    \n    const handleArtistCheck = (event) => {\n        setChecks({\n            artist: true,\n            album: false,\n            any: false,\n            label: \"artist\"\n        });\n    };\n\n    const handleAlbumCheck = (event) => {\n        setChecks({\n            artist: false,\n            album: true,\n            any: false,\n            label: \"album\"\n        });\n    };\n\n    const handleAnyCheck = (event) => {\n        setChecks({\n            artist: false,\n            album: false,\n            any: true,\n            label: \"album or artist\"\n        });\n    };\n\n    const handleSearch = (event) => {\n        let filterType = checks.artist ? \"artistName\" : (checks.album ? \"collectionName\" : \"any\");\n        dispatch(actions.fetchAlbums(filterType, searchValue));\n    }\n\n    return(\n        <Fragment>\n            <div className={classes.title}>\n                <Typography variant=\"h5\">Look for albums</Typography>\n                <Typography >Match by:</Typography>\n            </div>\n            <div className={classes.center}>\n                <FormControlLabel\n                    control={<PurpleCheckbox checked={checks.artist} onChange={handleArtistCheck} name=\"artist check\" />}\n                    label=\"Artist name\"\n                />\n                <FormControlLabel\n                    control={<PurpleCheckbox checked={checks.album} onChange={handleAlbumCheck} name=\"album check\" />}\n                    label=\"Album title\"\n                />\n                <FormControlLabel\n                    control={<PurpleCheckbox checked={checks.any} onChange={handleAnyCheck} name=\"any check\" />}\n                    label=\"Just any match\"\n                />\n            </div>\n            \n            <TextField\n                className={classes.inputLine}\n                id=\"outlined-name\"\n                label={`Match by ${checks.label}s`}\n                value={searchValue}\n                onChange={handleSearchValueChange}\n                variant=\"outlined\"\n            />\n            <div className={classes.center}>\n                <PurpleButton variant=\"contained\" color=\"primary\" onClick={handleSearch}>\n                    Szukaj\n                </PurpleButton>\n            </div>\n\n\n        </Fragment> \n    );\n}\n\nexport default SearchPanel;","import './Loader.css';\n\nconst Loader = (props) => {\n    return(\n        <div data-testid=\"spinner\" className=\"spinner\">\n            <div className={\"dot1\" + (props.white ? \" whiteDot\" : \"\")}></div>\n            <div className={\"dot2\" + (props.white ? \" whiteDot\" : \"\")}></div>\n        </div>\n    );\n}\n\nexport default Loader;","import React from 'react';\nimport { useSelector} from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Spinner from './../../UI/Loader/Loader';\n\nconst useStyles = makeStyles((theme) => ({\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  detailsContainer:{\n    display: \"flex\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    fontSize: theme.typography.pxToRem(13),\n  },\n  details: {\n    flex: \"50%\",\n    width: \"50%\"\n  },\n}));\n\nconst Result = (props) => {\n  const classes = useStyles();\n\n  const songs = useSelector(state => state.songs);\n  const err = useSelector(state => state.songErr);\n\n  let songsToShow = songs.map(song =>(\n      <li key={song.trackId}>{song.trackName}</li>\n    )\n  );\n\n  let res = {...props.result};\n\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let relDate = new Date(res.releaseDate);\n  let dateToDisplay = relDate.getDate() + ' ' + monthNames[relDate.getMonth()] + ' ' + relDate.getFullYear() +'r.';\n\n  let songsToDisplay = songsToShow.length === 0 ? <Spinner/> : <ol>{songsToShow}</ol>;\n  if(err){\n    songsToDisplay = err;\n  }\n\n  return (\n      <Accordion key={res.collectionId+res.releaseDate} expanded={props.expanded === res.collectionId} onChange={props.handleChange(res.collectionId)}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls={res.collectionId + \"-content\"}\n          id={res.collectionId+\"-header\"}\n        >\n          <Typography className={classes.heading}>{res.artistName}</Typography>\n          <Typography className={classes.secondaryHeading}>{res.collectionName}</Typography>\n        </AccordionSummary>\n        <hr/>\n        <AccordionDetails >\n          <div className={classes.detailsContainer}>\n              <div className={classes.details}>\n                  <p>Number of tracks: {res.trackCount}</p>\n                  <p>Country of origin: {res.country}</p>\n                  <p>Price: {res.collectionPrice} {res.currency}</p>\n                  <p>Release date: {dateToDisplay}</p>\n              </div>\n              <div className={classes.details}>\n                {songsToDisplay}\n              </div>\n          </div>\n        </AccordionDetails>\n      </Accordion>\n  );\n}\n\nexport default Result;","import React, { Fragment } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport * as actions from './../../store/actions';\nimport Spinner from './../UI/Loader/Loader';\nimport Result from './Result/Result';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  waitingPanel: {\n    color: 'white',\n    textAlign: 'center',\n    marginTop: '10px'\n  }\n}));\n\nexport default function SearchResult() {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const dispatch = useDispatch();\n  const results = useSelector(state => state.results);\n  const err = useSelector(state => state.resErr);\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    dispatch(actions.resetSongs());\n    let isClosing = (expanded === panel);\n    setExpanded(isExpanded ? panel : false);\n    if(!isClosing){\n      dispatch(actions.fetchSongsFromAlbum(panel));\n    }\n  };\n\n  let resultsToShow = results.map(res => {\n    return <Result key ={res.collectionId} result={res} expanded={expanded} handleChange={handleChange} />\n\n  })\n\n  if(err !== ''){\n    resultsToShow = <Typography className={classes.waitingPanel}>{err}</Typography>\n  }\n\n  let waitingScreen = (\n    <Fragment>\n      <Typography className={classes.waitingPanel}>We're waiting for you to enter the parameters in the form, <br/>then the search results will be displayed here</Typography>\n      <Spinner white={true}/>\n    </Fragment>\n  );\n\n  return (\n    <div className={classes.root}>\n      {resultsToShow.length === 0 ? waitingScreen : resultsToShow}\n    </div>\n  );\n}","import { Fragment } from 'react';\nimport'./App.css';\nimport Grid from './components/Grid/Grid';\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\nimport SearchPanel from './components/SearchPanel/SearchPanel';\nimport SearchResult from './components/SearchResult/SearchResult';\n\nfunction App() {\n  return (\n    <Fragment>\n      <header className=\"AppMainHeader\">\n        <MusicNoteIcon className=\"Icon\"/>\n        <h1>MyTunes app</h1>\n      </header>\n      <main>\n        <Grid left={<SearchPanel/>} right={<SearchResult/>} sl={5} sr={7} />\n      </main>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import * as actionTypes from './actionTypes';\n\nconst initialState = {\n    results: [],\n    songs: [],\n    resErr: \"\",\n    songErr:\"\"\n}\n\nconst updateObject = (oldObject, updatedProperties) => {\n    return{\n        ...oldObject, \n        ...updatedProperties\n    }\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case actionTypes.SEARCH_FOR_ALBUMS:\n            return updateObject(state, {\n                results: [...action.results],\n                resErr: ''\n            })\n        case actionTypes.ALBUMS_ERR:\n            return updateObject(state, {\n                results: [],\n                resErr: action.err\n            })\n        case actionTypes.GET_SONGS_FROM_ALBUM:\n            return updateObject(state, {\n                songs: [...action.songs],\n                songErr: ''\n            })\n        case actionTypes.SONG_ERR:\n            return updateObject(state, {\n                songs: [],\n                songErr: action.err\n            })\n        case actionTypes.RESET_SONGS:\n            return updateObject(state, {\n                songs: []\n            })\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport reducer from './store/reducer';\nimport reportWebVitals from './reportWebVitals';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducer, \n    composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}